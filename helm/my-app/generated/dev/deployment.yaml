---
# Source: my-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-deploy
  labels:
    helm.sh/chart: my-app
    app.kubernetes.io/name: my-app
    app.kubernetes.io/instance: my-app
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: my-app
      app.kubernetes.io/instance: my-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: my-app
        app.kubernetes.io/instance: my-app
    spec:
      serviceAccountName: my-app-sa
      securityContext: {}
      containers:
        - name: my-app
          securityContext: {}
          image: my-app:develop
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: POSTGRES_HOST
              value: my-app-db-postgresql.default.svc.cluster.local
          # PROBE #
          startupProbe:
            httpGet:
              path: /liveness
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 4
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /liveness
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 4
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /readiness
              port: 3000
            initialDelaySeconds: 0
            periodSeconds: 2
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: my-app/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami-deploy
  labels:
    helm.sh/chart: my-app
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: whoami
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: whoami
      app.kubernetes.io/instance: whoami
  template:
    metadata:
      labels:
        app.kubernetes.io/name: whoami
        app.kubernetes.io/instance: whoami
    spec:
      serviceAccountName: my-app-sa
      securityContext: {}
      containers:
        - name: whoami
          securityContext: {}
          image: traefik/whoami:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: POSTGRES_HOST
              value: my-app-db-postgresql.default.svc.cluster.local
          # PROBE #
          startupProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 4
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 4
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 0
            periodSeconds: 2
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 2
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
